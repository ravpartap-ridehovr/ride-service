// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/rides/v1/rideApp.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LOC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *LOC) Reset() {
	*x = LOC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LOC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LOC) ProtoMessage() {}

func (x *LOC) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LOC.ProtoReflect.Descriptor instead.
func (*LOC) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{0}
}

func (x *LOC) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LOC) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateUserLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserType     string `protobuf:"bytes,2,opt,name=userType,proto3" json:"userType,omitempty"`
	UserLocation *LOC   `protobuf:"bytes,3,opt,name=userLocation,proto3" json:"userLocation,omitempty"`
	Timestamp    string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UpdateUserLocationRequest) Reset() {
	*x = UpdateUserLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLocationRequest) ProtoMessage() {}

func (x *UpdateUserLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserLocationRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserLocationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserLocationRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *UpdateUserLocationRequest) GetUserLocation() *LOC {
	if x != nil {
		return x.UserLocation
	}
	return nil
}

func (x *UpdateUserLocationRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type UpdateUserLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateUserLocationResponse) Reset() {
	*x = UpdateUserLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLocationResponse) ProtoMessage() {}

func (x *UpdateUserLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserLocationResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUserLocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FindRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId  string `protobuf:"bytes,1,opt,name=riderId,proto3" json:"riderId,omitempty"`
	PickUp   *LOC   `protobuf:"bytes,2,opt,name=pickUp,proto3" json:"pickUp,omitempty"`
	DropOf   *LOC   `protobuf:"bytes,3,opt,name=dropOf,proto3" json:"dropOf,omitempty"`
	RideType string `protobuf:"bytes,4,opt,name=rideType,proto3" json:"rideType,omitempty"`
}

func (x *FindRideRequest) Reset() {
	*x = FindRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRideRequest) ProtoMessage() {}

func (x *FindRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRideRequest.ProtoReflect.Descriptor instead.
func (*FindRideRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{3}
}

func (x *FindRideRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *FindRideRequest) GetPickUp() *LOC {
	if x != nil {
		return x.PickUp
	}
	return nil
}

func (x *FindRideRequest) GetDropOf() *LOC {
	if x != nil {
		return x.DropOf
	}
	return nil
}

func (x *FindRideRequest) GetRideType() string {
	if x != nil {
		return x.RideType
	}
	return ""
}

type RideDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Otp                  string `protobuf:"bytes,1,opt,name=otp,proto3" json:"otp,omitempty"`
	DriverID             string `protobuf:"bytes,2,opt,name=driverID,proto3" json:"driverID,omitempty"`
	DriverLicensePlateNo string `protobuf:"bytes,3,opt,name=driverLicensePlateNo,proto3" json:"driverLicensePlateNo,omitempty"`
	TripId               string `protobuf:"bytes,4,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *RideDetails) Reset() {
	*x = RideDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideDetails) ProtoMessage() {}

func (x *RideDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideDetails.ProtoReflect.Descriptor instead.
func (*RideDetails) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{4}
}

func (x *RideDetails) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *RideDetails) GetDriverID() string {
	if x != nil {
		return x.DriverID
	}
	return ""
}

func (x *RideDetails) GetDriverLicensePlateNo() string {
	if x != nil {
		return x.DriverLicensePlateNo
	}
	return ""
}

func (x *RideDetails) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type NearDriverLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeriverLocation *LOC `protobuf:"bytes,1,opt,name=DeriverLocation,proto3" json:"DeriverLocation,omitempty"`
}

func (x *NearDriverLocations) Reset() {
	*x = NearDriverLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearDriverLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearDriverLocations) ProtoMessage() {}

func (x *NearDriverLocations) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearDriverLocations.ProtoReflect.Descriptor instead.
func (*NearDriverLocations) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{5}
}

func (x *NearDriverLocations) GetDeriverLocation() *LOC {
	if x != nil {
		return x.DeriverLocation
	}
	return nil
}

type FindRideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*FindRideResponse_RideDetails
	//	*FindRideResponse_NearDriverLocations
	Request isFindRideResponse_Request `protobuf_oneof:"request"`
}

func (x *FindRideResponse) Reset() {
	*x = FindRideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRideResponse) ProtoMessage() {}

func (x *FindRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRideResponse.ProtoReflect.Descriptor instead.
func (*FindRideResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{6}
}

func (m *FindRideResponse) GetRequest() isFindRideResponse_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *FindRideResponse) GetRideDetails() *RideDetails {
	if x, ok := x.GetRequest().(*FindRideResponse_RideDetails); ok {
		return x.RideDetails
	}
	return nil
}

func (x *FindRideResponse) GetNearDriverLocations() *NearDriverLocations {
	if x, ok := x.GetRequest().(*FindRideResponse_NearDriverLocations); ok {
		return x.NearDriverLocations
	}
	return nil
}

type isFindRideResponse_Request interface {
	isFindRideResponse_Request()
}

type FindRideResponse_RideDetails struct {
	RideDetails *RideDetails `protobuf:"bytes,1,opt,name=rideDetails,proto3,oneof"`
}

type FindRideResponse_NearDriverLocations struct {
	NearDriverLocations *NearDriverLocations `protobuf:"bytes,2,opt,name=nearDriverLocations,proto3,oneof"`
}

func (*FindRideResponse_RideDetails) isFindRideResponse_Request() {}

func (*FindRideResponse_NearDriverLocations) isFindRideResponse_Request() {}

type TrackRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driverId,proto3" json:"driverId,omitempty"`
	TripId   string `protobuf:"bytes,2,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *TrackRideRequest) Reset() {
	*x = TrackRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRideRequest) ProtoMessage() {}

func (x *TrackRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRideRequest.ProtoReflect.Descriptor instead.
func (*TrackRideRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{7}
}

func (x *TrackRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *TrackRideRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type TrackRideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DriverLocation *LOC   `protobuf:"bytes,2,opt,name=driverLocation,proto3" json:"driverLocation,omitempty"`
}

func (x *TrackRideResponse) Reset() {
	*x = TrackRideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRideResponse) ProtoMessage() {}

func (x *TrackRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRideResponse.ProtoReflect.Descriptor instead.
func (*TrackRideResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{8}
}

func (x *TrackRideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TrackRideResponse) GetDriverLocation() *LOC {
	if x != nil {
		return x.DriverLocation
	}
	return nil
}

type TrackTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *TrackTripRequest) Reset() {
	*x = TrackTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTripRequest) ProtoMessage() {}

func (x *TrackTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTripRequest.ProtoReflect.Descriptor instead.
func (*TrackTripRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{9}
}

func (x *TrackTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type TrackTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId         string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
	DriverLocation *LOC   `protobuf:"bytes,2,opt,name=DriverLocation,proto3" json:"DriverLocation,omitempty"`
	TripStatus     string `protobuf:"bytes,3,opt,name=tripStatus,proto3" json:"tripStatus,omitempty"`
	TripPayment    string `protobuf:"bytes,4,opt,name=tripPayment,proto3" json:"tripPayment,omitempty"`
}

func (x *TrackTripResponse) Reset() {
	*x = TrackTripResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTripResponse) ProtoMessage() {}

func (x *TrackTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTripResponse.ProtoReflect.Descriptor instead.
func (*TrackTripResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{10}
}

func (x *TrackTripResponse) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *TrackTripResponse) GetDriverLocation() *LOC {
	if x != nil {
		return x.DriverLocation
	}
	return nil
}

func (x *TrackTripResponse) GetTripStatus() string {
	if x != nil {
		return x.TripStatus
	}
	return ""
}

func (x *TrackTripResponse) GetTripPayment() string {
	if x != nil {
		return x.TripPayment
	}
	return ""
}

type ActiveDriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*ActiveDriverRequest_DriverOnlineRequest
	//	*ActiveDriverRequest_NewRideResponse
	//	*ActiveDriverRequest_ReachedAtPickupRequest
	Request isActiveDriverRequest_Request `protobuf_oneof:"request"`
}

func (x *ActiveDriverRequest) Reset() {
	*x = ActiveDriverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDriverRequest) ProtoMessage() {}

func (x *ActiveDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDriverRequest.ProtoReflect.Descriptor instead.
func (*ActiveDriverRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{11}
}

func (m *ActiveDriverRequest) GetRequest() isActiveDriverRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ActiveDriverRequest) GetDriverOnlineRequest() *DriverOnlineRequest {
	if x, ok := x.GetRequest().(*ActiveDriverRequest_DriverOnlineRequest); ok {
		return x.DriverOnlineRequest
	}
	return nil
}

func (x *ActiveDriverRequest) GetNewRideResponse() *NewRideRespose {
	if x, ok := x.GetRequest().(*ActiveDriverRequest_NewRideResponse); ok {
		return x.NewRideResponse
	}
	return nil
}

func (x *ActiveDriverRequest) GetReachedAtPickupRequest() *ReachedAtPickupRequest {
	if x, ok := x.GetRequest().(*ActiveDriverRequest_ReachedAtPickupRequest); ok {
		return x.ReachedAtPickupRequest
	}
	return nil
}

type isActiveDriverRequest_Request interface {
	isActiveDriverRequest_Request()
}

type ActiveDriverRequest_DriverOnlineRequest struct {
	DriverOnlineRequest *DriverOnlineRequest `protobuf:"bytes,1,opt,name=driverOnlineRequest,proto3,oneof"`
}

type ActiveDriverRequest_NewRideResponse struct {
	NewRideResponse *NewRideRespose `protobuf:"bytes,2,opt,name=newRideResponse,proto3,oneof"`
}

type ActiveDriverRequest_ReachedAtPickupRequest struct {
	ReachedAtPickupRequest *ReachedAtPickupRequest `protobuf:"bytes,3,opt,name=reachedAtPickupRequest,proto3,oneof"`
}

func (*ActiveDriverRequest_DriverOnlineRequest) isActiveDriverRequest_Request() {}

func (*ActiveDriverRequest_NewRideResponse) isActiveDriverRequest_Request() {}

func (*ActiveDriverRequest_ReachedAtPickupRequest) isActiveDriverRequest_Request() {}

type DriverOnlineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driverId,proto3" json:"driverId,omitempty"`
}

func (x *DriverOnlineRequest) Reset() {
	*x = DriverOnlineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverOnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverOnlineRequest) ProtoMessage() {}

func (x *DriverOnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverOnlineRequest.ProtoReflect.Descriptor instead.
func (*DriverOnlineRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{12}
}

func (x *DriverOnlineRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type NewRideRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TripId   string `protobuf:"bytes,2,opt,name=tripId,proto3" json:"tripId,omitempty"`
	DriverId string `protobuf:"bytes,3,opt,name=driverId,proto3" json:"driverId,omitempty"`
}

func (x *NewRideRespose) Reset() {
	*x = NewRideRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRideRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRideRespose) ProtoMessage() {}

func (x *NewRideRespose) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRideRespose.ProtoReflect.Descriptor instead.
func (*NewRideRespose) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{13}
}

func (x *NewRideRespose) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NewRideRespose) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *NewRideRespose) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type ReachedAtPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId    string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ReachedAtPickupRequest) Reset() {
	*x = ReachedAtPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReachedAtPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachedAtPickupRequest) ProtoMessage() {}

func (x *ReachedAtPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachedAtPickupRequest.ProtoReflect.Descriptor instead.
func (*ReachedAtPickupRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{14}
}

func (x *ReachedAtPickupRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *ReachedAtPickupRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReachedAtPickupRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ActiveDriverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ActiveDriverResponse_DriverOnlineResponse
	//	*ActiveDriverResponse_NewRideRequest
	//	*ActiveDriverResponse_ReachedAtPickupResponse
	Response isActiveDriverResponse_Response `protobuf_oneof:"response"`
}

func (x *ActiveDriverResponse) Reset() {
	*x = ActiveDriverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDriverResponse) ProtoMessage() {}

func (x *ActiveDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDriverResponse.ProtoReflect.Descriptor instead.
func (*ActiveDriverResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{15}
}

func (m *ActiveDriverResponse) GetResponse() isActiveDriverResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ActiveDriverResponse) GetDriverOnlineResponse() *DriverOnlineResponse {
	if x, ok := x.GetResponse().(*ActiveDriverResponse_DriverOnlineResponse); ok {
		return x.DriverOnlineResponse
	}
	return nil
}

func (x *ActiveDriverResponse) GetNewRideRequest() *NewRideRequest {
	if x, ok := x.GetResponse().(*ActiveDriverResponse_NewRideRequest); ok {
		return x.NewRideRequest
	}
	return nil
}

func (x *ActiveDriverResponse) GetReachedAtPickupResponse() *ReachedAtPickupResponse {
	if x, ok := x.GetResponse().(*ActiveDriverResponse_ReachedAtPickupResponse); ok {
		return x.ReachedAtPickupResponse
	}
	return nil
}

type isActiveDriverResponse_Response interface {
	isActiveDriverResponse_Response()
}

type ActiveDriverResponse_DriverOnlineResponse struct {
	DriverOnlineResponse *DriverOnlineResponse `protobuf:"bytes,1,opt,name=driverOnlineResponse,proto3,oneof"`
}

type ActiveDriverResponse_NewRideRequest struct {
	NewRideRequest *NewRideRequest `protobuf:"bytes,2,opt,name=newRideRequest,proto3,oneof"`
}

type ActiveDriverResponse_ReachedAtPickupResponse struct {
	ReachedAtPickupResponse *ReachedAtPickupResponse `protobuf:"bytes,3,opt,name=reachedAtPickupResponse,proto3,oneof"`
}

func (*ActiveDriverResponse_DriverOnlineResponse) isActiveDriverResponse_Response() {}

func (*ActiveDriverResponse_NewRideRequest) isActiveDriverResponse_Response() {}

func (*ActiveDriverResponse_ReachedAtPickupResponse) isActiveDriverResponse_Response() {}

type DriverOnlineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ack string `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *DriverOnlineResponse) Reset() {
	*x = DriverOnlineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverOnlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverOnlineResponse) ProtoMessage() {}

func (x *DriverOnlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverOnlineResponse.ProtoReflect.Descriptor instead.
func (*DriverOnlineResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{16}
}

func (x *DriverOnlineResponse) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

type NewRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId   string `protobuf:"bytes,1,opt,name=rideId,proto3" json:"rideId,omitempty"`
	Distance string `protobuf:"bytes,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Price    string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *NewRideRequest) Reset() {
	*x = NewRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRideRequest) ProtoMessage() {}

func (x *NewRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRideRequest.ProtoReflect.Descriptor instead.
func (*NewRideRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{17}
}

func (x *NewRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *NewRideRequest) GetDistance() string {
	if x != nil {
		return x.Distance
	}
	return ""
}

func (x *NewRideRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type ReachedAtPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ack string `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *ReachedAtPickupResponse) Reset() {
	*x = ReachedAtPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReachedAtPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachedAtPickupResponse) ProtoMessage() {}

func (x *ReachedAtPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachedAtPickupResponse.ProtoReflect.Descriptor instead.
func (*ReachedAtPickupResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{18}
}

func (x *ReachedAtPickupResponse) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

type TripStartNUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId    string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
	TripStage string `protobuf:"bytes,2,opt,name=tripStage,proto3" json:"tripStage,omitempty"`
	UserType  string `protobuf:"bytes,3,opt,name=userType,proto3" json:"userType,omitempty"`
}

func (x *TripStartNUpdatesRequest) Reset() {
	*x = TripStartNUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripStartNUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripStartNUpdatesRequest) ProtoMessage() {}

func (x *TripStartNUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripStartNUpdatesRequest.ProtoReflect.Descriptor instead.
func (*TripStartNUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{19}
}

func (x *TripStartNUpdatesRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *TripStartNUpdatesRequest) GetTripStage() string {
	if x != nil {
		return x.TripStage
	}
	return ""
}

func (x *TripStartNUpdatesRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

type TripStartNUpdatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId         string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
	DriverLocation *LOC   `protobuf:"bytes,2,opt,name=DriverLocation,proto3" json:"DriverLocation,omitempty"`
	TripStatus     string `protobuf:"bytes,3,opt,name=tripStatus,proto3" json:"tripStatus,omitempty"`
	TripPayment    string `protobuf:"bytes,4,opt,name=tripPayment,proto3" json:"tripPayment,omitempty"`
}

func (x *TripStartNUpdatesResponse) Reset() {
	*x = TripStartNUpdatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_rides_v1_rideApp_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripStartNUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripStartNUpdatesResponse) ProtoMessage() {}

func (x *TripStartNUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_rides_v1_rideApp_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripStartNUpdatesResponse.ProtoReflect.Descriptor instead.
func (*TripStartNUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_api_rides_v1_rideApp_proto_rawDescGZIP(), []int{20}
}

func (x *TripStartNUpdatesResponse) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *TripStartNUpdatesResponse) GetDriverLocation() *LOC {
	if x != nil {
		return x.DriverLocation
	}
	return nil
}

func (x *TripStartNUpdatesResponse) GetTripStatus() string {
	if x != nil {
		return x.TripStatus
	}
	return ""
}

func (x *TripStartNUpdatesResponse) GetTripPayment() string {
	if x != nil {
		return x.TripPayment
	}
	return ""
}

var File_api_rides_v1_rideApp_proto protoreflect.FileDescriptor

var file_api_rides_v1_rideApp_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x69, 0x64, 0x65, 0x41, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x52, 0x69,
	0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x3f, 0x0a, 0x03, 0x4c, 0x4f, 0x43, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4c, 0x4f, 0x43, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x36, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4c, 0x4f, 0x43, 0x52,
	0x06, 0x70, 0x69, 0x63, 0x6b, 0x55, 0x70, 0x12, 0x25, 0x0a, 0x06, 0x64, 0x72, 0x6f, 0x70, 0x4f,
	0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x2e, 0x4c, 0x4f, 0x43, 0x52, 0x06, 0x64, 0x72, 0x6f, 0x70, 0x4f, 0x66, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x69, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x52,
	0x69, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72,
	0x69, 0x70, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x13, 0x4e, 0x65, 0x61, 0x72, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0f, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e,
	0x4c, 0x4f, 0x43, 0x52, 0x0f, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x69, 0x64,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x69, 0x64, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x13, 0x6e, 0x65, 0x61, 0x72, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4e, 0x65, 0x61,
	0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x13, 0x6e, 0x65, 0x61, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4c, 0x4f, 0x43, 0x52, 0x0e,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4c, 0x4f, 0x43, 0x52,
	0x0e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x95, 0x02, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f,
	0x6e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x2e, 0x4e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x41,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x13, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0e,
	0x4e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x16, 0x52, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x9b, 0x02, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x52, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x17, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x41, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x41, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x22, 0x5a, 0x0a, 0x0e, 0x4e, 0x65,
	0x77, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x41, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x63, 0x6b, 0x22, 0x6c, 0x0a, 0x18, 0x54, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x70, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x69, 0x70,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xac, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x4c, 0x4f, 0x43, 0x52, 0x0e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x72, 0x69, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x32, 0x7a, 0x0a, 0x15, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x32, 0xe2, 0x01, 0x0a,
	0x0b, 0x52, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x46, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1a,
	0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x52, 0x69, 0x64,
	0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x46, 0x0a, 0x09, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x54, 0x72, 0x69, 0x70, 0x12, 0x1a, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x32, 0x62, 0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x32, 0x6f, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x54, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x52, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x8f, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x52,
	0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x0c, 0x52, 0x69, 0x64, 0x65, 0x41, 0x70, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x68, 0x6f, 0x76, 0x72, 0x2f, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x73, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58,
	0xaa, 0x02, 0x08, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0xca, 0x02, 0x08, 0x52, 0x69,
	0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0xe2, 0x02, 0x14, 0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08,
	0x52, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_rides_v1_rideApp_proto_rawDescOnce sync.Once
	file_api_rides_v1_rideApp_proto_rawDescData = file_api_rides_v1_rideApp_proto_rawDesc
)

func file_api_rides_v1_rideApp_proto_rawDescGZIP() []byte {
	file_api_rides_v1_rideApp_proto_rawDescOnce.Do(func() {
		file_api_rides_v1_rideApp_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_rides_v1_rideApp_proto_rawDescData)
	})
	return file_api_rides_v1_rideApp_proto_rawDescData
}

var file_api_rides_v1_rideApp_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_rides_v1_rideApp_proto_goTypes = []any{
	(*LOC)(nil),                        // 0: RideBook.LOC
	(*UpdateUserLocationRequest)(nil),  // 1: RideBook.UpdateUserLocationRequest
	(*UpdateUserLocationResponse)(nil), // 2: RideBook.UpdateUserLocationResponse
	(*FindRideRequest)(nil),            // 3: RideBook.FindRideRequest
	(*RideDetails)(nil),                // 4: RideBook.RideDetails
	(*NearDriverLocations)(nil),        // 5: RideBook.NearDriverLocations
	(*FindRideResponse)(nil),           // 6: RideBook.FindRideResponse
	(*TrackRideRequest)(nil),           // 7: RideBook.TrackRideRequest
	(*TrackRideResponse)(nil),          // 8: RideBook.TrackRideResponse
	(*TrackTripRequest)(nil),           // 9: RideBook.TrackTripRequest
	(*TrackTripResponse)(nil),          // 10: RideBook.TrackTripResponse
	(*ActiveDriverRequest)(nil),        // 11: RideBook.ActiveDriverRequest
	(*DriverOnlineRequest)(nil),        // 12: RideBook.DriverOnlineRequest
	(*NewRideRespose)(nil),             // 13: RideBook.NewRideRespose
	(*ReachedAtPickupRequest)(nil),     // 14: RideBook.ReachedAtPickupRequest
	(*ActiveDriverResponse)(nil),       // 15: RideBook.ActiveDriverResponse
	(*DriverOnlineResponse)(nil),       // 16: RideBook.DriverOnlineResponse
	(*NewRideRequest)(nil),             // 17: RideBook.NewRideRequest
	(*ReachedAtPickupResponse)(nil),    // 18: RideBook.ReachedAtPickupResponse
	(*TripStartNUpdatesRequest)(nil),   // 19: RideBook.TripStartNUpdatesRequest
	(*TripStartNUpdatesResponse)(nil),  // 20: RideBook.TripStartNUpdatesResponse
}
var file_api_rides_v1_rideApp_proto_depIdxs = []int32{
	0,  // 0: RideBook.UpdateUserLocationRequest.userLocation:type_name -> RideBook.LOC
	0,  // 1: RideBook.FindRideRequest.pickUp:type_name -> RideBook.LOC
	0,  // 2: RideBook.FindRideRequest.dropOf:type_name -> RideBook.LOC
	0,  // 3: RideBook.NearDriverLocations.DeriverLocation:type_name -> RideBook.LOC
	4,  // 4: RideBook.FindRideResponse.rideDetails:type_name -> RideBook.RideDetails
	5,  // 5: RideBook.FindRideResponse.nearDriverLocations:type_name -> RideBook.NearDriverLocations
	0,  // 6: RideBook.TrackRideResponse.driverLocation:type_name -> RideBook.LOC
	0,  // 7: RideBook.TrackTripResponse.DriverLocation:type_name -> RideBook.LOC
	12, // 8: RideBook.ActiveDriverRequest.driverOnlineRequest:type_name -> RideBook.DriverOnlineRequest
	13, // 9: RideBook.ActiveDriverRequest.newRideResponse:type_name -> RideBook.NewRideRespose
	14, // 10: RideBook.ActiveDriverRequest.reachedAtPickupRequest:type_name -> RideBook.ReachedAtPickupRequest
	16, // 11: RideBook.ActiveDriverResponse.driverOnlineResponse:type_name -> RideBook.DriverOnlineResponse
	17, // 12: RideBook.ActiveDriverResponse.newRideRequest:type_name -> RideBook.NewRideRequest
	18, // 13: RideBook.ActiveDriverResponse.reachedAtPickupResponse:type_name -> RideBook.ReachedAtPickupResponse
	0,  // 14: RideBook.TripStartNUpdatesResponse.DriverLocation:type_name -> RideBook.LOC
	1,  // 15: RideBook.LocationUpdateService.UpdateUserLocation:input_type -> RideBook.UpdateUserLocationRequest
	3,  // 16: RideBook.RideService.FindRide:input_type -> RideBook.FindRideRequest
	7,  // 17: RideBook.RideService.TrackRide:input_type -> RideBook.TrackRideRequest
	9,  // 18: RideBook.RideService.TrackTrip:input_type -> RideBook.TrackTripRequest
	11, // 19: RideBook.DriverService.ActiveDriver:input_type -> RideBook.ActiveDriverRequest
	19, // 20: RideBook.TripService.TripStartNUpdates:input_type -> RideBook.TripStartNUpdatesRequest
	2,  // 21: RideBook.LocationUpdateService.UpdateUserLocation:output_type -> RideBook.UpdateUserLocationResponse
	6,  // 22: RideBook.RideService.FindRide:output_type -> RideBook.FindRideResponse
	8,  // 23: RideBook.RideService.TrackRide:output_type -> RideBook.TrackRideResponse
	10, // 24: RideBook.RideService.TrackTrip:output_type -> RideBook.TrackTripResponse
	15, // 25: RideBook.DriverService.ActiveDriver:output_type -> RideBook.ActiveDriverResponse
	20, // 26: RideBook.TripService.TripStartNUpdates:output_type -> RideBook.TripStartNUpdatesResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_rides_v1_rideApp_proto_init() }
func file_api_rides_v1_rideApp_proto_init() {
	if File_api_rides_v1_rideApp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_rides_v1_rideApp_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LOC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FindRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RideDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NearDriverLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FindRideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TrackRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TrackRideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TrackTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TrackTripResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ActiveDriverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DriverOnlineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*NewRideRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReachedAtPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ActiveDriverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DriverOnlineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*NewRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ReachedAtPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*TripStartNUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_rides_v1_rideApp_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*TripStartNUpdatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_rides_v1_rideApp_proto_msgTypes[6].OneofWrappers = []any{
		(*FindRideResponse_RideDetails)(nil),
		(*FindRideResponse_NearDriverLocations)(nil),
	}
	file_api_rides_v1_rideApp_proto_msgTypes[11].OneofWrappers = []any{
		(*ActiveDriverRequest_DriverOnlineRequest)(nil),
		(*ActiveDriverRequest_NewRideResponse)(nil),
		(*ActiveDriverRequest_ReachedAtPickupRequest)(nil),
	}
	file_api_rides_v1_rideApp_proto_msgTypes[15].OneofWrappers = []any{
		(*ActiveDriverResponse_DriverOnlineResponse)(nil),
		(*ActiveDriverResponse_NewRideRequest)(nil),
		(*ActiveDriverResponse_ReachedAtPickupResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_rides_v1_rideApp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_api_rides_v1_rideApp_proto_goTypes,
		DependencyIndexes: file_api_rides_v1_rideApp_proto_depIdxs,
		MessageInfos:      file_api_rides_v1_rideApp_proto_msgTypes,
	}.Build()
	File_api_rides_v1_rideApp_proto = out.File
	file_api_rides_v1_rideApp_proto_rawDesc = nil
	file_api_rides_v1_rideApp_proto_goTypes = nil
	file_api_rides_v1_rideApp_proto_depIdxs = nil
}
